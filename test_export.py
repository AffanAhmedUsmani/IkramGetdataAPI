# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestExport():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_export(self):
    # Test name: export
    # Step # | name | target | value
    # 1 | open | https://dlims.punjab.gov.pk/verify | 
    self.driver.get("https://dlims.punjab.gov.pk/verify")
    # 2 | setWindowSize | 1936x1048 | 
    self.driver.set_window_size(1936, 1048)
    # 3 | click | id=cnicInput | 
    self.driver.find_element(By.ID, "cnicInput").click()
    # 4 | click | id=cnicInput | 
    self.driver.find_element(By.ID, "cnicInput").click()
    # 5 | click | id=cnicInput | 
    self.driver.find_element(By.ID, "cnicInput").click()
    # 6 | type | id=cnicInput | 3440293014149
    self.driver.find_element(By.ID, "cnicInput").send_keys("3440293014149")
    # 7 | click | id=licenseNumber | 
    self.driver.find_element(By.ID, "licenseNumber").click()
    # 8 | type | id=licenseNumber | MN-23-3297
    self.driver.find_element(By.ID, "licenseNumber").send_keys("MN-23-3297")
    # 9 | click | id=captcha | 
    self.driver.find_element(By.ID, "captcha").click()
    # 10 | type | id=captcha | qbfxyn
    self.driver.find_element(By.ID, "captcha").send_keys("qbfxyn")
    # 11 | click | id=submit-btn | 
    self.driver.find_element(By.ID, "submit-btn").click()
    # 12 | click | css=.table:nth-child(8) > tbody | 
    self.driver.find_element(By.CSS_SELECTOR, ".table:nth-child(8) > tbody").click()
    # 13 | click | css=.table:nth-child(8) tr:nth-child(1) > td:nth-child(3) | 
    self.driver.find_element(By.CSS_SELECTOR, ".table:nth-child(8) tr:nth-child(1) > td:nth-child(3)").click()
    # 14 | click | css=.table:nth-child(8) tr:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".table:nth-child(8) tr:nth-child(1)").click()
    # 15 | click | css=.table:nth-child(8) tr:nth-child(2) > td:nth-child(1) > span | 
    self.driver.find_element(By.CSS_SELECTOR, ".table:nth-child(8) tr:nth-child(2) > td:nth-child(1) > span").click()
  
